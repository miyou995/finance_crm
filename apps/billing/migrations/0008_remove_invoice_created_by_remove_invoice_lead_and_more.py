# Generated by Django 5.2.5 on 2025-09-17 16:10

import apps.core.models
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("billing", "0007_alter_invoiceitem_title_alter_quoteitem_title"),
        ("leads", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="invoice",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="lead",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="invoiceitem",
            name="bill",
        ),
        migrations.RemoveField(
            model_name="quote",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="quote",
            name="lead",
        ),
        migrations.RemoveField(
            model_name="quote",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="quoteitem",
            name="bill",
        ),
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bill_type",
                    models.CharField(
                        choices=[
                            ("quote", "Devis"),
                            ("invoice", "Facture"),
                            ("credit_note", "Avoir"),
                            ("other", "Autre"),
                        ],
                        default="quote",
                        max_length=20,
                        verbose_name="Type de facture",
                    ),
                ),
                ("bill_number", models.CharField(max_length=50, verbose_name="Numéro")),
                (
                    "bill_year",
                    models.PositiveIntegerField(db_index=True, editable=False),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date d'échéance"
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Creation date"
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "bill_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Applicable seulement si vous ne souhaitez pas utiliser les lignes de facture.",
                        max_digits=10,
                        null=True,
                        verbose_name="Montant total",
                    ),
                ),
                (
                    "bill_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Remise sur le total de la facture.",
                        max_digits=10,
                        null=True,
                        verbose_name="Remise",
                    ),
                ),
                (
                    "state",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "En attente"),
                            (2, "Envoyé"),
                            (3, "Accepté"),
                            (4, "Refusé"),
                            (5, "Partiellement payé"),
                            (6, "Payé"),
                            (7, "Annulé"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="date d'expiration"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bills_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bills",
                        to="leads.b2blead",
                        verbose_name="Opportunité",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bills_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
            bases=(apps.core.models.CRUDUrlMixin, models.Model),
        ),
    ]
