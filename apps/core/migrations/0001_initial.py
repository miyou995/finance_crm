# Generated by Django 5.2.5 on 2025-09-11 12:44

import apps.core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LeadSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50, verbose_name="Nom")),
            ],
            options={
                "verbose_name": "Source de contact",
                "verbose_name_plural": "Sources de contact",
            },
            bases=(apps.core.models.CRUDUrlMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Potential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.CharField(
                        help_text="Lettre de segmentation (A, B, C..etc)",
                        max_length=1,
                        unique=True,
                    ),
                ),
                (
                    "min_employees",
                    models.PositiveIntegerField(
                        help_text="Seuil d’employés minimum inclusif"
                    ),
                ),
                (
                    "max_employees",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Seuil d’employés maximum inclusif (laisser vide pour ∞)",
                        null=True,
                    ),
                ),
                (
                    "potentiel",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Tax de formation / CAT théorique",
                        max_digits=15,
                        verbose_name="Tax de formation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Potentiel",
                "verbose_name_plural": "Potentiels",
                "ordering": ["-created_at"],
            },
            bases=(apps.core.models.CRUDUrlMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("tax", models.DecimalField(decimal_places=2, max_digits=5)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Taxe",
                "verbose_name_plural": "Taxes",
                "ordering": ["-created_at"],
            },
            bases=(apps.core.models.CRUDUrlMixin, models.Model),
        ),
    ]
